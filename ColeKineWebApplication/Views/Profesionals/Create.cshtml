@model ColeKineWebApplication.Models.PersonaViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Profesional</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DNI, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DNI, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DNI, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DropDownListFor("Mmodel => model.Sexo, ViewBag.Sexos)
        </div>
    </div>*@
    @*<div class="form-group">
        @Html.DropDownListFor(m => m.Sexo, 
            new SelectList(Model.Sexo, 
                "SexoId", "Value"))
    </div>*@

   

    <div class="form-group">
        @Html.LabelFor(model => model.Nacionalidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nacionalidad, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nacionalidad, "", new { @class = "text-danger"  })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", type = "email" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@* Esto ira en la siguiente vista *@

@*<div class="form-group">
    @Html.LabelFor(model => model.CUIT, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CUIT, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CUIT, "", new { @class = "text-danger" })
    </div>
</div>*@
@*<div class="form-group">
    @Html.LabelFor(model => model.OtrasCajasPrevisionales, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.OtrasCajasPrevisionales, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OtrasCajasPrevisionales, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.AportaFondoSolidaridad, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.EditorFor(model => model.AportaFondoSolidaridad)
            @Html.ValidationMessageFor(model => model.AportaFondoSolidaridad, "", new { @class = "text-danger" })
        </div>
    </div>
</div>*@